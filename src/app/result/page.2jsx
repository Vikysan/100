"use client";

import React, { useState,useEffect } from 'react';




const TestResultsPage = () => {
  const [neco, setNeco] = useState(null);

  useEffect(() => {
    const result = JSON.parse(localStorage.getItem("result")) || [];
    setNeco(result);
  }, []);
const resultJSON = [
    {
      task: 'Rozdělení el. zařízení podle napětí mezi vodičem a zemí v uzemněné soustavě je:',
      options: [{
        text:'mn do 50 V, nn 50 - 600 V, vn 0,6 - 30 kV',
        isTrue:true
      },
      {
        text:'mn do 50 V, nn 50 - 1000 V, vn 1 - 35 kV',
        isTrue:false,
        select: true
      },
      {
        text:'mn do 50 V, nn 50 - 400 V, vn 0,4 - 22 kV',
        isTrue:false
      }
    ]
     
    }, {
        task: 'Rozdělení el. zařízení podle napětí mezi vodiči v uzemněné AC soustavě je:',
        options: [{
          text:'mn do 50 V, nn 50 - 1000 V, vn 1 - 52 kV',
          isTrue:true
        },
        {
          text:'mn do 50 V, nn 50 - 1000 V, vn 1 - 35 kV',
          isTrue:false,
          select: true
        },
        {
          text:'mn do 50 V, nn 50 - 400 V, vn 0,4 - 22 kV',
          isTrue:false
        }
      ]
       
      }, {
        task: 'Podle účelu se el. zařízení dělí na:',
        options: [{
          text:'silová, sdělovací a řídící',
          isTrue:true,
          select: true
        },
        {
          text:'silnoproudá, slaboproudá, sdělovací',
          isTrue:false
        },
        {
          text:'drážní, báňská, vojenská',
          isTrue:false
        }
      ]}]

  const testResults = {
    totalQuestions: 10,
    correctAnswers: 7,
    timeSpent: 12, // minuty
    completedAt: new Date().toLocaleString('cs-CZ'),
    questionRange: '1-10',
    randomOrder: false,
    questions: neco}
    
  console.log(neco)

  const [showDetails, setShowDetails] = useState(false);

  // Pomocné funkce pro výpočet výsledků
  const calculateResults = () => {
    let correctAnswers = 0;

    testResults.questions?.forEach(question => {
      const selectedOption = question.options.find(option => option.select);
      const correctOption = question.options.find(option => option.isTrue);

      if (selectedOption && correctOption && selectedOption.text === correctOption.text) {
        correctAnswers++;
      }
    });

    return {
      correctAnswers,
      incorrectAnswers: testResults.totalQuestions - correctAnswers,
      scorePercentage: Math.round((correctAnswers / testResults.totalQuestions) * 100)
    };
  };

  const results = calculateResults();
  const { correctAnswers, incorrectAnswers, scorePercentage } = results;

  const getScoreColor = () => {
    if (scorePercentage >= 80) return 'text-green-600';
    if (scorePercentage >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getScoreBgColor = () => {
    if (scorePercentage >= 80) return 'bg-green-50 border-green-200';
    if (scorePercentage >= 60) return 'bg-yellow-50 border-yellow-200';
    return 'bg-red-50 border-red-200';
  };

  const isQuestionCorrect = (question) => {
    const selectedOption = question.options.find(option => option.selected);
    const correctOption = question.options.find(option => option.isTrue);
    return  selectedOption?.text == correctOption?.text;
  };

  const getUserAnswer = (question) => {
    const selectedOption = question.options.find(option => option.select);
    return selectedOption ? selectedOption.text : "Bez odpovědi";
  };

  const getCorrectAnswer = (question) => {
    const correctOption = question.options.find(option => option.isTrue);
    return correctOption ? correctOption.text : "";
  };
 if (neco === null) {
    return <div>Načítání...</div>;
  }
  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="p-3 bg-slate-800 rounded-lg">
              <svg className="w-8 h-8 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h1 className="text-3xl font-bold text-slate-800">Výsledky testu</h1>
          </div>
          <p className="text-gray-600">TechAssessment - Technický test znalostí</p>
        </div>

        {/* Overall Score */}
        <div className={`rounded-xl border-2 p-8 mb-8 ${getScoreBgColor()}`}>
          <div className="text-center">
            <div className={`text-6xl font-bold mb-2 ${getScoreColor()}`}>
              {scorePercentage}%
            </div>
            <div className="text-xl text-gray-700 mb-4">
              {correctAnswers} z {testResults.totalQuestions} správných odpovědí
            </div>
            <div className="flex justify-center items-center gap-8 text-sm text-gray-600">
              <div className="flex items-center gap-2">
                <svg className="w-5 h-5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <span>Čas: {testResults.timeSpent} min</span>
              </div>
              <div className="flex items-center gap-2">
                <svg className="w-5 h-5 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z" />
                </svg>
                <span>Rozsah: {testResults.questionRange}</span>
              </div>
              <div className="flex items-center gap-2">
                <svg className="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3a2 2 0 012-2h4a2 2 0 012 2v4m-6 0a2 2 0 00-2 2v2m0 0a2 2 0 002 2h12a2 2 0 002-2v-2m0 0a2 2 0 00-2-2H8z" />
                </svg>
                <span>{testResults.completedAt}</span>
              </div>
            </div>
          </div>
        </div>

        {/* Statistics */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white rounded-lg p-6 shadow-sm border">
            <div className="flex items-center gap-3">
              <div className="p-3 bg-green-100 rounded-lg">
                <svg className="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <div>
                <div className="text-2xl font-bold text-green-600">{correctAnswers}</div>
                <div className="text-sm text-gray-600">Správné odpovědi</div>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg p-6 shadow-sm border">
            <div className="flex items-center gap-3">
              <div className="p-3 bg-red-100 rounded-lg">
                <svg className="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </div>
              <div>
                <div className="text-2xl font-bold text-red-600">{incorrectAnswers}</div>
                <div className="text-sm text-gray-600">Nesprávné odpovědi</div>
              </div>
            </div>
          </div>

          <div className="bg-white rounded-lg p-6 shadow-sm border">
            <div className="flex items-center gap-3">
              <div className="p-3 bg-blue-100 rounded-lg">
                <svg className="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
              </div>
              <div>
                <div className="text-2xl font-bold text-blue-600">{Math.round(testResults.timeSpent / testResults.totalQuestions * 10) / 10}</div>
                <div className="text-sm text-gray-600">Min/otázka</div>
              </div>
            </div>
          </div>
        </div>

        {/* Toggle Details */}
        <div className="text-center mb-6">
          <button
            onClick={() => setShowDetails(!showDetails)}
            className="px-6 py-3 bg-slate-800 text-white rounded-lg hover:bg-slate-700 transition-colors flex items-center gap-2 mx-auto"
          >
            <svg className={`w-5 h-5 transition-transform ${showDetails ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
            </svg>
            {showDetails ? 'Skrýt detaily' : 'Zobrazit detaily odpovědí'}
          </button>
        </div>

        {/* Detailed Results */}
        {showDetails && (
          <div className="space-y-4">
            <h2 className="text-xl font-semibold text-slate-800 mb-4">Detailní přehled odpovědí</h2>

            {testResults.questions.map((question, index) => {
              const isCorrect = isQuestionCorrect(question);
              const userAnswer = getUserAnswer(question);
              const correctAnswer = getCorrectAnswer(question);

              return (
                <div key={question.index + "question"} className={`bg-white rounded-lg border-l-4 shadow-sm ${isCorrect ? 'border-l-green-500' : 'border-l-red-500'
                  }`}>
                  <div className="p-6">
                    <div className="flex items-start justify-between mb-4">
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-2">
                          <span className="text-sm font-medium text-gray-500">Otázka {index + 1}</span>
                          <div className={`px-2 py-1 rounded-full text-xs font-medium ${isCorrect
                              ? 'bg-green-100 text-green-800'
                              : 'bg-red-100 text-red-800'
                            }`}>
                            {isCorrect ? 'Správně' : 'Špatně'}
                          </div>
                        </div>
                        <h3 className="text-lg font-medium text-slate-800 mb-3">
                          {question.task}
                        </h3>
                      </div>

                      <div className={`p-2 rounded-full ${isCorrect ? 'bg-green-100' : 'bg-red-100'
                        }`}>
                        {isCorrect ? (
                          <svg className="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                          </svg>
                        ) : (
                          <svg className="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                          </svg>
                        )}
                      </div>
                    </div>

                    <div className="space-y-2">
                      <div className="flex items-center gap-2">
                        <span className="text-sm font-medium text-gray-600">Vaše odpověď:</span>
                        <span className={`text-sm ${isCorrect ? 'text-green-700' : 'text-red-700'}`}>
                          {userAnswer}
                        </span>
                      </div>

                      {!isCorrect && (
                        <div className="flex items-center gap-2">
                          <span className="text-sm font-medium text-gray-600">Správná odpověď:</span>
                          <span className="text-sm text-green-700 font-medium">
                            {correctAnswer}
                          </span>
                        </div>
                      )}
                    </div>

                    {/* Zobrazení všech možností */}
                    <div className="mt-4 space-y-2">
                      <span className="text-sm font-medium text-gray-600">Všechny možnosti:</span>
                      <div className="grid gap-2">
                        {question.options.map((option, optionIndex) => (
                          <div key={optionIndex} className={`p-3 rounded-lg border text-sm ${option.select && option.isTrue
                              ? 'bg-green-50 border-green-200 text-green-800'
                              : option.select && !option.isTrue
                                ? 'bg-red-50 border-red-200 text-red-800'
                                : option.isTrue
                                  ? 'bg-green-50 border-green-200 text-green-700'
                                  : 'bg-gray-50 border-gray-200 text-gray-700'
                            }`}>
                            <div className="flex items-center justify-between">
                              <span>{option.text}</span>
                              <div className="flex items-center gap-2">
                                {option.select && (
                                  <span className="text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded">
                                    Vybrané
                                  </span>
                                )}
                                {option.isTrue && (
                                  <span className="text-xs px-2 py-1 bg-green-100 text-green-800 rounded">
                                    Správné
                                  </span>
                                )}
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        )}

        {/* Actions */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center mt-12">
          <button className="px-8 py-3 bg-emerald-600 text-white rounded-lg hover:bg-emerald-700 transition-colors">
            Opakovat test
          </button>
          <button className="px-8 py-3 bg-slate-600 text-white rounded-lg hover:bg-slate-700 transition-colors">
            Nový test
          </button>
          <button className="px-8 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
            Stáhnout výsledky
          </button>
        </div>
      </div>
    </div>
  );
};

export default TestResultsPage;